import { EventEmitter } from 'events';
export interface F123TelemetryData {
    sessionType: number;
    sessionTimeLeft: number;
    sessionDuration: number;
    driverName: string;
    teamName: string;
    carPosition: number;
    numCars: number;
    carNumber: number;
    lapTime: number;
    sector1Time: number;
    sector2Time: number;
    sector3Time: number;
    lapNumber: number;
    currentLapTime: number;
    lastLapTime: number;
    bestLapTime: number;
    speed: number;
    throttle: number;
    brake: number;
    steering: number;
    gear: number;
    engineRPM: number;
    tireWear: {
        frontLeft: number;
        frontRight: number;
        rearLeft: number;
        rearRight: number;
    };
    tireTemperature: {
        frontLeft: number;
        frontRight: number;
        rearLeft: number;
        rearRight: number;
    };
    fuelLevel: number;
    fuelCapacity: number;
    energyStore: number;
    airTemperature: number;
    trackTemperature: number;
    rainPercentage: number;
    drsEnabled: boolean;
    ersDeployMode: number;
    fuelMix: number;
    penalties: number;
    warnings: number;
    numUnservedDriveThroughPens: number;
    numUnservedStopGoPens: number;
    gapToPole?: number;
    timestamp: Date;
}
export declare class TelemetryService extends EventEmitter {
    private f123;
    isRunning: boolean;
    private lastData;
    private dataBuffer;
    private readonly BUFFER_SIZE;
    private sessionStartTime;
    private currentSessionData;
    constructor();
    private setupF123Handlers;
    private convertMotionData;
    private convertSessionData;
    private convertCarStatusData;
    private convertLapData;
    private handleSessionData;
    private processTelemetryData;
    private addToBuffer;
    private getSessionTypeName;
    private autoExportSessionData;
    private extractFinalResults;
    private findPoleTime;
    private checkCriticalConditions;
    start(): void;
    stop(): void;
    getLastData(): F123TelemetryData | null;
    getDataBuffer(): F123TelemetryData[];
    getCurrentSessionData(): F123TelemetryData[];
}
//# sourceMappingURL=TelemetryService.d.ts.map